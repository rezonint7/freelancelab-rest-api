@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    Layout = "_LayoutAdmin";
    var userId = ViewData["userId"];
    var roleId = ViewData["roleId"];
}

<div class="container-profile-edit" id="profile-edit">
    <div class="card mb-1" id="main-info-card">
        <h5 class="card-header bg-secondary d-sm-inline-flex justify-content-between">
            <strong class="text-white mt-auto mb-auto">Основная информация</strong>
            <button type="button" class="btn btn-outline-light btn-sm" id="save-profile-button">Сохранить</button>
        </h5>

        <div class="card-body">
            <form id="editForm" method="post">
                <div class="form-group">
                    <label for="lastname" id="lastname-label">Фамилия:</label>
                    <input type="text" class="form-control" id="lastName">
                    <div id="lastname-error" class="text-danger"></div>
                </div>
                <div class="form-group">
                    <label for="firstname" id="firstname-label">Имя:</label>
                    <input type="text" class="form-control" id="firstName">
                    <div id="firstname-error" class="text-danger"></div>
                </div>
                <div class="form-group">
                    <label for="middlename" id="middlename-label">Отчество:</label>
                    <input type="text" class="form-control" id="middleName">
                    <div id="middlename-error" class="text-danger"></div>
                </div>
                <div class="form-group">
                    <label for="birthday" id="birthday-label">Дата рождения:</label>
                    <input type="date" class="form-control" id="birthDay">
                    <div id="birthday-error" class="text-danger"></div>
                </div>
                <div class="form-group">
                    <label for="gender" id="gender-label">Пол:</label>
                    <select class="form-control" id="gender">
                        <option value="нет">Не выбрано</option>
                        <option value="муж">Мужской</option>
                        <option value="жен">Женский</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="phone" id="phone-label">Номер телефона:</label>
                    <input type="tel" class="form-control" id="phone">
                    <div id="phone-error" class="text-danger"></div>
                </div>
                <div class="form-group">
                    <label for="email" id="email-label">Email:</label>
                    <input type="email" class="form-control" id="email">
                    <div id="email-error" class="text-danger"></div>
                </div><br />

                <div class="form-group">
                    <label for="about" id="about-label">О себе:</label><br />
                    <textarea class="form-control" id="about" required></textarea>
                    <div id="about-error" class="text-danger"></div>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.6/jquery.inputmask.min.js"></script>
<script>
    const commonURL = @Json.Serialize(@Configuration.GetSection("ApiURL").GetSection("common").Value);
    function parseJwt(token) {
        var base64Url = token.split('.')[1];
        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));

        return JSON.parse(jsonPayload);
    }

    function loadAllRefsFromLocal() {
        var refs = localStorage.getItem('refs');
        var refsObj = JSON.parse(refs);

        if (refsObj && refsObj.workExperience) {
            var workExperienceSelect = document.getElementById('work-experience');
            for (var i = 0; i < refsObj.workExperience.length; i++) {
                var workExperienceOption = document.createElement("option");
                workExperienceOption.value = i + 1;
                workExperienceOption.text = refsObj.workExperience[i].name;
                workExperienceSelect.add(workExperienceOption);
            }
        }

        if (refsObj && refsObj.categories) {
            var categorySelect = document.getElementById('category');
            for (var j = 0; j < refsObj.categories.length; j++) {
                var categoryOption = document.createElement("option");
                categoryOption.value = j + 1;
                categoryOption.text = refsObj.categories[j].name;
                categorySelect.add(categoryOption);
            }
        }
    }

    function loadViewForImplementer() {
        var card = `
                        <div class="form-group">
                            <label for="specialization" id="specialization-label">Специализация:</label>
                            <input type="text" class="form-control" id="specialization">
                            <div id="specialization-error" class="text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="work-experience">Опыт работы:</label>
                            <select class="form-control" id="work-experience">
                                <option selected disabled>Выберите опыт работы</option>
                            </select>
                        </div>
                            <div class="form-group">
                                <label for="category">Категория деятельности:</label>
                                <select class="form-control" id="category">
                                    <option selected disabled>Выберите категорию деятельности</option>
                                </select>
                            </div>
                        <div class="form-group">
                            <label for="skills">Ключевые навыки:</label>
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" id="skills" placeholder="Введите навык">
                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="button" onclick="addSkill()">Добавить</button>
                                </div>
                            </div>
                        </div>

                        <div id="skillsList" class="form-group">
                            <div class="card-list" id="card-list-items"></div>
                        </div>
                `;
        $('#editForm').append(card);
        loadAllRefsFromLocal();
    }

    function addUserDataFromLocal(roleUser) {
        if(roleUser == "1"){
            var settings = {
                "url": commonURL + "profile/implementer/@userId",
                "method": "GET",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + sessionStorage.getItem('admin')
                }
            };

            $.ajax(settings).done(function (userData) {
                document.getElementById('firstName').value = userData.userInfo.firstName;
                document.getElementById('lastName').value = userData.userInfo.lastName;
                document.getElementById('middleName').value = userData.userInfo.middleName;
                document.getElementById('birthDay').value = userData.userInfo.birthday ? userData.userInfo.birthday.slice(0, 10) : '2000-01-01';
                document.getElementById('phone').value = userData.userInfo.phone;
                document.getElementById('email').value = userData.userInfo.email;
                document.getElementById('about').value = userData.about;

                document.getElementById('specialization').value = userData.specialization;
                userData.skills.forEach(function (skill) {
                    skillsList.push(skill.name);
                });
                updateSkillsList();

                if (userData.workExperience) {
                    var workExperienceSelect = document.getElementById('work-experience');
                    var selectedWorkExperience = [...workExperienceSelect.options].find(option => option.value === userData.workExperience.id.toString());
                    if (selectedWorkExperience) {
                        selectedWorkExperience.selected = true;
                    }
                }
                if (userData.category) {
                    var categorySelect = document.getElementById('category');
                    var selectedCategory = [...categorySelect.options].find(option => option.value === userData.category.id.toString());
                    if (selectedCategory) {
                        selectedCategory.selected = true;
                    }
                }
                if (userData.userInfo.gender) {
                    var genderSelect = document.getElementById('gender');
                    var selectedGender = [...genderSelect.options].find(option => option.value === userData.userInfo.gender.toString());
                    if (selectedGender) {
                        selectedGender.selected = true;
                    }
                }
                console.log(userData);
            });
        }
        if (roleUser == "2") {
            var settings = {
                "url": commonURL + "profile/customer/@userId",
                "method": "GET",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + sessionStorage.getItem('admin')
                }
            };

            $.ajax(settings).done(function (userData) {
                document.getElementById('firstName').value = userData.userInfo.firstName;
                document.getElementById('lastName').value = userData.userInfo.lastName;
                document.getElementById('middleName').value = userData.userInfo.middleName;
                document.getElementById('birthDay').value = userData.userInfo.birthday ? userData.userInfo.birthday.slice(0, 10) : '2000-01-01';
                document.getElementById('phone').value = userData.userInfo.phone;
                document.getElementById('email').value = userData.userInfo.email;
                document.getElementById('about').value = userData.about;
                console.log(userData);
            });
        }
        jQuery(document).ready(function ($) {
            $('#phone').inputmask('+7(999)999-9999', {
                clearIncomplete: true,
                clearMaskOnLostFocus: false
            });
        });
    }

    function addSkill() {
        var skillInput = document.getElementById('skills');
        var skill = skillInput.value.trim();
        if (skill !== '') {
            skillsList.push(skill);
            updateSkillsList();
            skillInput.value = '';
        }
    }

    function removeSkill(index) {
        skillsList.splice(index, 1);
        updateSkillsList();
    }

    function updateSkillsList() {
        var skillsDiv = document.querySelector('#skillsList .card-list');
        skillsDiv.innerHTML = '';

        skillsList.forEach(function (skill, index) {
            var card = `
                  <div class="card d-inline-block m-1">
                    <div class="card-body p-2">
                      ${skill}
                      <button onclick="removeSkill(${index})" class="btn btn-sm btn-danger p-0">&#x2716;</button>
                    </div>

                  </div>
                `;

            skillsDiv.innerHTML += card;
        });
    }

    function validateInput(errorsArray) {
        for (var errorKey in errorsArray) {
            if (errorsArray.hasOwnProperty(errorKey)) {
                var error = errorsArray[errorKey];
                var propertyName = error["PropertyName"].replace(/Id/g, '');
                var errorMessage = error["ErrorMessage"].replace(/Id/g, '').replace(/0:00:00/g, '');
                var labelError = document.getElementById(`${propertyName.toLowerCase()}-label`);

                var errorElement = document.getElementById(`${propertyName.toLowerCase()}-error`);
                if (errorElement) {
                    //errorElement.innerText = "Поле " + `'${labelError.innerText.replace(':', '')}'` + errorMessage.replace(/'.*?'/g, '');
                    errorElement.innerText = errorMessage;
                    console.log(errorMessage.replace(`'${propertyName}'`, ''));
                }
            }
        }
    }

    function clearErrorMessages() {
        document.getElementById('lastName').addEventListener('input', function () {
            document.getElementById('lastname-error').textContent = '';
        });
        document.getElementById('firstName').addEventListener('input', function () {
            document.getElementById('firstname-error').textContent = '';
        });
        document.getElementById('middleName').addEventListener('input', function () {
            document.getElementById('middlename-error').textContent = '';
        });
        document.getElementById('phone').addEventListener('input', function () {
            document.getElementById('phone-error').textContent = '';
        });
        document.getElementById('email').addEventListener('input', function () {
            document.getElementById('email-error').textContent = '';
        });
        document.getElementById('about').addEventListener('input', function () {
            document.getElementById('about-error').textContent = '';
        });
        if (roleUser == "1") {
            document.getElementById('specialization').addEventListener('input', function () {
                document.getElementById('specialization-error').textContent = '';
            });
        }
    }

    var skillsList = [];
    var roleUser = "@roleId";

    if (roleUser == "1") {
        loadViewForImplementer();
    }
    addUserDataFromLocal(roleUser);
    document.getElementById('save-profile-button').addEventListener('click', function () {
        if (roleUser == "1") {
            var settings = {
                "url": commonURL + "profile/implementer/edit",
                "method": "PUT",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + sessionStorage.getItem('admin')
                },
                "data": JSON.stringify({
                    "implementerId": "@userId",
                    "firstName": $("#firstName").val(),
                    "lastName": $("#lastName").val(),
                    "middleName": $("#middleName").val(),
                    "specialization": $("#specialization").val(),
                    "gender": $("#gender").val(),
                    "email": $("#email").val(),
                    "phone": $("#phone").val(),
                    "about": $("#about").val(),
                    "birthday": $("#birthDay").val(),
                    "categoryId": Number($("#category").val()),
                    "workExperienceId": Number($("#work-experience").val()),
                    "skills": skillsList.map(function (skill) {
                        return { "name": skill };
                    })
                }),
            };

            $.ajax(settings).done(function (response) {
                window.location.href = '/admin/users';
            }).fail(function (xhr, status, error) {
                if (xhr.status === 400 || xhr.status === 401) {
                    validateInput(xhr.responseJSON);
                }
            });
        }
        if (roleUser == "2") {
            var settings = {
                "url": commonURL + "profile/customer/edit",
                "method": "PUT",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + sessionStorage.getItem('admin')
                },
                "data": JSON.stringify({
                    "customerId": "@userId",
                    "firstName": $("#firstName").val(),
                    "lastName": $("#lastName").val(),
                    "middleName": $("#middleName").val(),
                    "gender": $("#gender").val(),
                    "email": $("#email").val(),
                    "phone": $("#phone").val(),
                    "about": $("#about").val(),
                    "birthday": $("#birthDay").val(),
                }),
            };

            $.ajax(settings).done(function (response) {
                window.location.href = '/admin/users';
            }).fail(function (xhr, status, error) {
                if (xhr.status === 400 || xhr.status === 401) {
                    validateInput(xhr.responseJSON);
                }
            });
        }
    });
    clearErrorMessages();
</script>
